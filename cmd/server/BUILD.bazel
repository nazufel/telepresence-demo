# BUILD.bazel

# file generated by gazelle and modified by the CODEOWNER

# file used to build the Go binary as well as the container image, and push to a Docker registry

# --------------------------------------------------------------------------- #

### Generated by Gazelle - DO NOT MODIFY ###

# load rules for building Go
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

# define all of the libaries the main package depends on
go_library(
    name = "server_lib",
    srcs = ["main.go"],
    importpath = "github.com/nazufel/wizter/cmd/server",
    visibility = ["//visibility:private"],
    deps = [
        "//wizard",
        "@org_golang_google_grpc//:go_default_library",
        "@org_mongodb_go_mongo_driver//bson",
        "@org_mongodb_go_mongo_driver//mongo",
        "@org_mongodb_go_mongo_driver//mongo/options",
        "@org_mongodb_go_mongo_driver//mongo/readpref",
    ],
)

# build the binary with all of the dependent libraries
go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

### Modified by the CODEOWNER ###

# load rules for using Linux container images and Docker repositories
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

# make a base image from alpine linux that was pulled in the WORKSPACE FILE
container_image(
    name = "image",
    base = "@alpine_linux_amd64//image",
    entrypoint = ["/server"],
    files = [":server"],
    repository = "wizter",
)

# tag the image and push it to a remote registry
container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "index.docker.io",
    repository = "wizter/server",
    tag = "v1",
)
#EOF